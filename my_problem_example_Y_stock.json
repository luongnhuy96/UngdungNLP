{
  "name": "Trading Strategy Analysis Problem",
  "description": "You are tasked with implementing a trading strategy using technical indicators such as the Simple Moving Average (SMA) and the Moving Average Convergence Divergence (MACD). The strategy involves analyzing stock price data stored in a DataFrame named 'data' containing columns 'Datetime' and 'Close'. Follow these steps to implement the strategy: \n1.Set the 'Datetime' column as the index of the DataFrame. \n2.Define a window size of 20 for calculating the SMA. \n3.Compute the SMA (Simple Moving Average) for the closing prices using a rolling window of the defined size. \n4.Calculate the MACD (Moving Average Convergence Divergence) indicator: \na.Compute the EMA (Exponential Moving Average) with a span of 12 periods (short EMA). \nb. Compute the EMA with a span of 26 periods (long EMA). \nc. Compute the MACD line by subtracting the long EMA from the short EMA. \n5.Compute the Signal Line for the MACD using an EMA with a span of 9 periods. \n6.Generate buy and sell signals based on the MACD and SMA: \na. Buy Signal: When the MACD line crosses above the Signal Line and the closing price is above the SMA. \nb. Sell Signal: When the MACD line crosses below the Signal Line and the closing price is below the SMA. \n7.Output the dates where buy or sell signals are generated along with relevant data including closing price, SMA, MACD, Signal Line, and buy/sell signals. \nImplement the trading strategy following the above steps to provide insights into potential buying and selling opportunities based on technical indicators. \n\nInput\n\n The input starts with a string representing the stock name, where the stock name is a three-character string indicating the name of the stock for which the data is provided. Each of the following n lines contains a row of data, consisting of m elements separated by '|''. The columns represent the following attributes: 'Datetime', 'Open', 'High', 'Low', 'Close', and 'Volume'. Output\n\n The output consists of n lines, each containing the analysis results for the corresponding datetime entry in the dataset. Each line includes the following attributes separated by spaces or tabs: 'Datetime', 'Close', 'SMA', 'MACD', 'Signal_Line', 'Buy_Signal', and 'Sell_Signal'. The 'Buy_Signal' and 'Sell_Signal' attributes receive a boolean value (True or False), where 'True' indicates a buy signal and 'False' indicates a sell signal. When 'Buy_Signal' is True, 'Sell_Signal' must be False, and vice versa. Each of the following n lines contains a row of data, consisting of m elements separated by '|'.\n\n Example\n\nInput\n\n\nVCB\nDatetime | Open |High    |    Low   |Close    |   Volume \n 2020-09-01 | 55077.917969 | 55276.996094 | 55011.558594 | 55077.917969 | 2645611\n2020-09-03  |  55542.429688  |  57400.480469  |  55542.429688  |  57201.406250  |  4429078\n2020-09-04  |  56405.097656  |  57135.046875  |  56272.378906  |  56338.738281  |  3689570\n2020-09-07  |  56206.019531  |  56471.457031  |  55476.074219  |  55476.074219  |  2178726\n2020-09-08  |  55476.074219  |  55675.148438  |  54613.406250  |  54746.125000  |  3085582 \n 2020-09-09  |  54414.328125  |  55210.636719  |  54082.535156  |  54547.046875  |  2259950 \n2020-09-10  |  55077.917969  |  55276.996094  |  54480.687500  |  54480.687500  |  1069486 \n2020-09-11  |  54480.687500  |  54812.484375  |  54281.613281  |  54613.406250  |  1003165 \n2020-09-14  |  54945.199219  |  55144.277344  |  54878.843750  |  55077.917969  |  991094\n\n\n\nOutput\n\n\nDatetime | Close | SMA | MACD | Signal_Line | Buy_Signal | Sell_Signal \n2020-09-29 | 56139.660156 | 55598.836328 | 399.610464 | 217.459838 | True | False\n\nNote\n\nThe following illustrates the first example.\n\n",
  "public_tests": {
    "input": [
      "VCB\nDatetime | Open |High    |    Low   |Close    |   Volume \n 2020-09-01 | 55077.917969 | 55276.996094 | 55011.558594 | 55077.917969 | 2645611\n2020-09-03  |  55542.429688  |  57400.480469  |  55542.429688  |  57201.406250  |  4429078\n2020-09-04  |  56405.097656  |  57135.046875  |  56272.378906  |  56338.738281  |  3689570\n2020-09-07  |  56206.019531  |  56471.457031  |  55476.074219  |  55476.074219  |  2178726\n2020-09-08  |  55476.074219  |  55675.148438  |  54613.406250  |  54746.125000  |  3085582 \n 2020-09-09  |  54414.328125  |  55210.636719  |  54082.535156  |  54547.046875  |  2259950 \n2020-09-10  |  55077.917969  |  55276.996094  |  54480.687500  |  54480.687500  |  1069486 \n2020-09-11  |  54480.687500  |  54812.484375  |  54281.613281  |  54613.406250  |  1003165 \n2020-09-14  |  54945.199219  |  55144.277344  |  54878.843750  |  55077.917969  |  991094\n"
    ],
    "is_valid_test": null,
    "output": [
      "Datetime | Close | SMA | MACD | Signal_Line | Buy_Signal | Sell_Signal \n2020-09-29 | 56139.660156 | 55598.836328 | 399.610464 | 217.459838 | True | False\n"
    ]
  },
  "private_tests": {
    "input": [],
    "is_valid_test": null,
    "output": []
  }
  
}